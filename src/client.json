{
    "name": "Xing",
    "apiVersion": "2013-04-05",
    "description": "Xing is an API that allows you to interact with Xing professional social network",
    "operations": {
        "users": {
            "httpMethod": "GET",
            "uri": "users/{id}",
            "summary": "gets data for a specific user",
            "responseClass": "users.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "id of the user to fetch",
                    "required": "true"
                },
                "fields": {
                    "location": "query",
                    "description": "define fields to return, otherwise returns full data"
                }
            }
        },
        "users.me": {
            "httpMethod": "GET",
            "uri": "users/me",
            "summary": "Gets user profile of me",
            "responseClass": "users.me.output"
        },
        "users.me.id_card": {
            "httpMethod": "GET",
            "uri": "users/me/id_card",
            "summary": "Gets ID card profile of me",
            "responseClass": "users.me.id_card.output"
        },
        "users.find_by_emails": {
            "httpMethod": "GET",
            "uri": "users/find_by_emails",
            "summary": "finds users by e-mail addresses",
            "responseClass": "users.find_by_emails.output",
            "parameters": {
                "emails": {
                    "location": "query",
                    "description": "(hashed) emails",
                    "required": "true"
                },
                "hash_function": {
                    "location": "query",
                    "description": "hash function to use"
                },
                "user_fields": {
                    "location": "query",
                    "description": "fields to return (otherwise ID)"
                }
            }
        },
        "status_message": {
            "httpMethod": "POST",
            "uri": "users/{id}/status_message",
            "summary": "Posts a new status update for the specified user in the activity stream.",
            "responseClass": "status_message.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user to post status message to",
                    "required": "true"
                },
                "message": {
                    "location": "query",
                    "description": "message to post",
                    "required": "true"
                }
            }
        },
        "users.get_profile_message": {
            "httpMethod": "GET",
            "uri": "users/{id}/profile_message",
            "summary": "get the last profile message of user",
            "responseClass": "users.get_profile_message.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                }
            }
        },
        "users.set_profile_message": {
            "httpMethod": "PUT",
            "uri": "users/{id}/profile_message",
            "summary": "set profile message",
            "responseClass": "users.set_profile_message.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "message": {
                    "location": "query",
                    "description": "message to set",
                    "required": "true"
                },
                "public": {
                    "location": "query",
                    "description": "public or not"
                }
            }
        },
        "jobs.recommendations": {
            "httpMethod": "GET",
            "uri": "users/{id}/jobs/recommendations",
            "summary": "get job recommendations for a user",
            "responseClass": "jobs.recommendations.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "id of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of list"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of list"
                },
                "user_fields": {
                    "location": "query",
                    "description": "fields to return"
                }
            }
        },
        "users.get_contacts": {
            "httpMethod": "GET",
            "uri": "users/{id}/contacts",
            "summary": "get a user's contacts",
            "responseClass": "users.get_contacts.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of the query"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of the query"
                },
                "order_by": {
                    "location": "query",
                    "description": "order by of the query"
                },
                "user_fields": {
                    "location": "query",
                    "description": "fields to return"
                }
            }
        },
        "users.get_contact_tags": {
            "httpMethod": "GET",
            "uri": "users/{id}/contacts/{contactid}/tags",
            "summary": "get tags of a contact",
            "responseClass": "users.get_contact_tags.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "contactid": {
                    "location": "uri",
                    "description": "ID of the contact",
                    "required": "true"
                }
            }
        },
        "users.get_contacts_shared": {
            "httpMethod": "GET",
            "uri": "users/{id}/contacts/shared",
            "summary": "get the shared contacts of you and another user",
            "responseClass": "users.get_contacts_shared.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the other user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of query"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of query"
                },
                "order_by": {
                    "location": "query",
                    "description": "order by field"
                },
                "user_fields": {
                    "location": "query",
                    "description": "fields to return"
                }
            }
        },
        "users.get_contact_requests": {
            "httpMethod": "GET",
            "uri": "users/{id}/contact_requests",
            "summary": "get contact requests for a user",
            "responseClass": "users.get_contact_requests.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of the query"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of the query"
                },
                "user_fields": {
                    "location": "query",
                    "description": "fields to return"
                }
            }
        },
        "users.get_contact_requests_sent": {
            "httpMethod": "GET",
            "uri": "users/{id}/contact_requests/sent",
            "summary": "get contact requests the user has sent",
            "responseClass": "users.get_contact_requests_sent.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of the query"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of the query"
                }
            }
        },
        "users.get_contact_paths": {
            "httpMethod": "GET",
            "uri": "users/{id}/network/{otherid}/paths",
            "summary": "get contact path(s) between two users",
            "responseClass": "users.get_contact_path.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the first user",
                    "required": "true"
                },
                "otherid": {
                    "location": "uri",
                    "summary": "ID of the other user",
                    "required": "true"
                },
                "all_paths": {
                    "location": "query",
                    "summary": "get all paths"
                },
                "user_fields": {
                    "location": "query",
                    "summary": "get user fields"
                }
            }
        },
        "users.get_bookmarks": {
            "httpMethod": "GET",
            "uri": "users/{id}/bookmarks",
            "summary": "get bookmarked users for a user",
            "responseClass": "users.get_bookmarks.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of list"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of list"
                },
                "user_fields": {
                    "location": "query",
                    "description": "return specific user fields"
                }
            }
        },
        "users.create_bookmark": {
            "httpMethod": "PUT",
            "uri": "users/{id}/bookmarks/{bookmarkid}",
            "summary": "create a user bookmark",
            "responseClass": "users.create_bookmark.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user who wants to create a bookmark",
                    "required": "true"
                },
                "bookmarkid": {
                    "location": "uri",
                    "description": "ID of the user who should be bookmarked"
                }
            }
        },
        "users.delete_bookmark": {
            "httpMethod": "DELETE",
            "uri": "users/{id}/bookmarks/{bookmarkid}",
            "summary": "delete a user bookmark",
            "responseClass": "users.delete_bookmark.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user who wants to delete a bookmark",
                    "required": "true"
                },
                "bookmarkid": {
                    "location": "uri",
                    "description": "ID of the bookmarked user who should be deleted"
                }
            }
        },
        "users.get_visits": {
            "httpMethod": "GET",
            "uri": "users/{id}/visits",
            "summary": "get list of users that visited this user",
            "responseClass": "users.get_visits.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of the list"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of the list"
                },
                "since": {
                    "location": "query",
                    "description": "return only users who visited since"
                },
                "strip_html": {
                    "location": "query",
                    "description": "strip HTML for visit reason"
                }
            }
        },
        "users.create_visit": {
            "httpMethod": "POST",
            "uri": "users/{id}/visits",
            "summary": "create a visit to a specific user",
            "responseClass": "users.create_visit.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user to visit",
                    "required": "true"
                }
            }
        },
        "users.get_recommendations": {
            "httpMethod": "GET",
            "uri": "users/{id}/network/recommendations",
            "summary": "get recommendations of other users for a user",
            "responseClass": "users.get_recommendations.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of the list"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of the list"
                },
                "similar_user_id": {
                    "location": "query",
                    "description": "user id of other users for whom interesting users should be received"
                },
                "user_fields": {
                    "location": "query",
                    "description": "receive specific user fields"
                }
            }
        },
        "users.block_recommendation": {
            "httpMethod": "DELETE",
            "uri": "users/{id}/network/recommendations/user/{blockid}",
            "summary": "block recommendation of a user with id blockid",
            "responseClass": "users.block_recommendation.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user who receives recommendations",
                    "required": "true"
                },
                "blockid": {
                    "location": "uri",
                    "description": "ID of the user who should be blocked in recommendations",
                    "required": "true"
                }
            }
        },
        "users.get_network_feed": {
            "httpMethod": "GET",
            "uri": "users/{id}/network_feed",
            "summary": "get the network feed of the user",
            "responseClass": "users.get_network_feed.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "id of the user",
                    "required": "true"
                },
                "aggregate": {
                    "location": "query",
                    "description": "if you want aggregation of activities"
                },
                "since": {
                    "location": "query",
                    "description": "since specified timestamp"
                },
                "until": {
                    "location": "query",
                    "description": "older than specified timestamp"
                },
                "user_fields": {
                    "location": "query",
                    "description": "user fields to return"
                }
            }
        },
        "users.get_user_feed": {
            "httpMethod": "GET",
            "uri": "users/{id}/feed",
            "summary": "get network feed of a specific user",
            "responseClass": "users.get_user_feed.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the user",
                    "required": "true"
                },
                "since": {
                    "location": "query",
                    "description": "since specified timestamp"
                },
                "until": {
                    "location": "query",
                    "description": "older than specified timestamp"
                },
                "user_fields": {
                    "location": "query",
                    "description": "user fields to return"
                }
            }
        },
        "users.get_activity": {
            "httpMethod": "GET",
            "uri": "activities/{id}",
            "summary": "get a single activity",
            "responseClass": "users.get_activity.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the activity",
                    "required": "true"
                },
                "user_fields": {
                    "location": "query",
                    "description": "user fields to return"
                }
            }
        },
        "users.share_activity": {
            "httpMethod": "POST",
            "uri": "activities/{id}/share",
            "summary": "share an activity to your network",
            "responseClass": "users.share_activity.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the activity",
                    "required": "true"
                },
                "text": {
                    "location": "query",
                    "description": "text to share"
                }
            }
        },
        "users.delete_activity": {
            "httpMethod": "DELETE",
            "uri": "activities/{id}",
            "summary": "delete your own activity",
            "responseClass": "users.delete_activity.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the activity to delete",
                    "required": "true"
                }
            }
        },
        "users.get_activity_comments": {
            "httpMethod": "GET",
            "uri": "activities/{id}/comments",
            "summary": "get comments for a specific activity",
            "responseClass": "users.get_activity_comments.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the activity",
                    "required": "true"
                },
                "limit": {
                    "location": "query",
                    "description": "limit of the list"
                },
                "offset": {
                    "location": "query",
                    "description": "offset of the list"
                },
                "user_fields": {
                    "location": "query",
                    "description": "receive specific user fields"
                }
            }
        },
        "users.post_activity_comment": {
            "httpMethod": "POST",
            "uri": "activities/{id}/comments",
            "summary": "post a comment on an activity",
            "responseClass": "users.post_activity_comment.output",
            "parameters": {
                "id": {
                    "location": "uri",
                    "description": "ID of the activity",
                    "required": "true"
                },
                "text": {
                    "location": "query",
                    "description": "comment to add to the activity",
                    "required": "true"
                }
            }
        }
    },
    "models": {
        "users.output": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "users"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.me.output": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "users"
                    }
                }
            }
        },
        "users.me.id_card.output": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "location": "json"
                }
            }
        },
        "users.find_by_emails.output": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "object",
                    "location": "json"
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "status_message.output": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "array",
                    "location": "body"
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_profile_message.output": {
            "type": "object",
            "properties": {
                "profile_message": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "profile_message"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.set_profile_message.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "jobs.recommendations.output": {
            "type": "object",
            "properties": {
                "job_recommendations": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "job_recommendations"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_contacts.output": {
            "type": "object",
            "properties": {
                "contacts": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "contacts"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_contact_tags.output": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "tags"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_contacts_shared.output": {
            "type": "object",
            "properties": {
                "shared_contacts": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "shared_contacts"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_contact_requests.output": {
            "type": "object",
            "properties": {
                "contact_requests": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "contact_requests"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_contact_requests_sent.output": {
            "type": "object",
            "properties": {
                "contact_requests": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "contact_requests"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_contact_paths.output": {
            "type": "object",
            "properties": {
                "contact_paths": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "contact_paths"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_bookmarks.output": {
            "type": "object",
            "properties": {
                "bookmarks": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "bookmarks"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.create_bookmark.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.delete_bookmark.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_visits.output": {
            "type": "object",
            "properties": {
                "visits": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "visits"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.create_visit.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_recommendations.output": {
            "type": "object",
            "properties": {
                "user_recommendations": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "user_recommendations"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.block_recommendation.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_network_feed.output": {
            "type": "object",
            "properties": {
                "network_activities": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "network_activities"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_user_feed.output": {
            "type": "object",
            "properties": {
                "network_activities": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "network_activities"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_activity.output": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "activities"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.share_activity.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.delete_activity.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.get_activity_comments.output": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "location": "json",
                    "items": {
                        "$ref": "comments"
                    }
                },
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        },
        "users.post_activity_comment.output": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string",
                    "location": "statusCode"
                }
            }
        }
    }
}